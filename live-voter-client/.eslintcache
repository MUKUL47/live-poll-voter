[{"D:\\mukul\\live-voter\\live-voter-client\\src\\index.js":"1","D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\reducers.js":"2","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\App.js":"3","D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\actions.js":"4","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.jsx":"5","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.jsx":"6","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\navbar\\navbar.jsx":"7","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.render.jsx":"8","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.render.jsx":"9","D:\\mukul\\live-voter\\live-voter-client\\src\\utils\\material.modules.js":"10"},{"size":377,"mtime":1611670468000,"results":"11","hashOfConfig":"12"},{"size":292,"mtime":1611567018000,"results":"13","hashOfConfig":"12"},{"size":679,"mtime":1611685208000,"results":"14","hashOfConfig":"12"},{"size":64,"mtime":1611566134000,"results":"15","hashOfConfig":"12"},{"size":2350,"mtime":1611734194000,"results":"16","hashOfConfig":"12"},{"size":1848,"mtime":1611729706000,"results":"17","hashOfConfig":"12"},{"size":1858,"mtime":1611725228000,"results":"18","hashOfConfig":"12"},{"size":3567,"mtime":1611734930000,"results":"19","hashOfConfig":"12"},{"size":5217,"mtime":1611725220000,"results":"20","hashOfConfig":"12"},{"size":1424,"mtime":1611730352000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yph74w",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"D:\\mukul\\live-voter\\live-voter-client\\src\\index.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\reducers.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\App.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\actions.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.jsx",["47","48","49","50","51","52","53"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultHeaders, LoopIcon } from '../../utils/material.modules'\r\nimport {VotePoll, VoteStats} from './vote.render'\r\nfunction Vote(props) {\r\n    const [voteContext, setVoteContext] = useState({ \r\n        voteStat : 1, \r\n        pollData : null, \r\n        id : window.location.pathname.split('/')[2],\r\n        voteStatus : 'Vote'\r\n    })\r\n    const history = useHistory();\r\n    const setContext = obj => setVoteContext({ ...voteContext,  ...obj})\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080'+window.location.pathname, { headers: defaultHeaders}). \r\n        then(r => r.json()).\r\n        then(response => {\r\n            if(response['message']){\r\n                if(response.code != 200){\r\n                    history.push('/create', { alert : response.message || 'Unknown error occured' })\r\n                    return \r\n                }\r\n                console.log(response.message)\r\n                setContext({pollData : response.message})\r\n            }\r\n        })\r\n    }, [])\r\n    const vote = index => {\r\n        setContext({ voteStatus : 'Voting' })\r\n        fetch(`http://localhost:8080/vote/${voteContext.id}/${index}`, { headers : defaultHeaders, method : 'POST' }). \r\n        then(r => r.json()).\r\n        then(response => {\r\n            setContext({ voteStatus : 'Vote' })\r\n            if(response.code != 201){\r\n                alert(response.message || 'Unknown error occured')\r\n                return \r\n            }\r\n            alert('Voted successfully!')\r\n            // history.push('/create', { alert : 'Voted successfully!' })\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                voteContext.pollData ?\r\n                voteContext.voteStat ?\r\n                <VotePoll \r\n                    showVote={() => setContext({voteStat : 0})} \r\n                    vote={vote}\r\n                    pollData={voteContext.pollData}\r\n                    voteStatus={voteContext.voteStatus}\r\n                /> :\r\n                <VoteStats \r\n                    goBack={() => setContext({voteStat : 1})}\r\n                />\r\n                :<LoopIcon className='vote-loading'/>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Vote\r\n\r\n",["54","55"],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.jsx",["56","57","58"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport CreateRender, { OnCreate } from './create.render'\r\nfunction Create(props) {\r\n    const createLocation = useLocation()\r\n    const [createContext, setCreateContext] = useState(\r\n        {   loading : false, \r\n            created : false, \r\n            resetCreateForm : true,\r\n            id : null\r\n        });\r\n    const setContext = keyValue => setCreateContext({...createContext, ...keyValue})\r\n    useEffect(()=>{\r\n        if(createLocation.state.alert){\r\n            setTimeout(() => alert(createLocation.state.alert), 500)\r\n        }\r\n    },[])\r\n    const submit = form => {\r\n        setContext({ loading : true })\r\n        fetch('http://localhost:8080/poll', { method : \"GSA\", body : JSON.stringify(form), \r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        } }). \r\n        then(r => r.json()). \r\n        then(response => {\r\n            setContext({ loading : false, created : true, resetCreateForm : Math.random(), id : response['message'] })\r\n        }).catch(e => {\r\n            setContext({ loading : false })\r\n            alert(`ERROR : ${JSON.stringify(e)}`)\r\n        })\r\n    }\r\n    const closeCreated = () => {\r\n        setContext({ created : false });\r\n    }\r\n    return (\r\n        <>\r\n            <CreateRender \r\n                submit={submit} \r\n                loading={createContext.loading} \r\n                resetCreateForm={createContext.resetCreateForm}\r\n            />\r\n            {\r\n                createContext.created ? \r\n                <OnCreate \r\n                    id={createContext.id} \r\n                    close={closeCreated}\r\n                /> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Create\r\n\r\n","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\navbar\\navbar.jsx",["59","60"],"\r\nimport React, { useState } from 'react'\r\nimport Create from '../create/create';\r\nimport Vote from '../vote/vote'\r\nimport './navbar.css'\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\nfunction NavBar(props) {\r\n    const history = useHistory();\r\n    const [votePoll, setVotePoll] = useState(false)\r\n    const toCreate = () => {\r\n        history.push('/create')\r\n    }\r\n    const onModal = type => {\r\n        if(!type || type.trim().length === 0){\r\n            setVotePoll(false)\r\n            return;\r\n        }\r\n        setVotePoll(false)\r\n        history.push('/vote/'+type)\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-items\">\r\n                    <div className=\"nav-item\" onClick={toCreate}>Create Poll</div>\r\n                    <div className=\"nav-item\" onClick={() => setVotePoll(true)}>Vote Poll</div>\r\n                </div>\r\n                <h1 className=\"header\">\r\n                    Live Voter\r\n                </h1>\r\n            </div>\r\n            {\r\n                votePoll ? <EnterPollIdTemplate onModal = {onModal}/> : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nfunction EnterPollIdTemplate({ onModal }){\r\n    const [pollId, setPollId] = useState('')\r\n    return <div className=\"overlay\">\r\n        <div className=\"overlay-div poll-template\">\r\n            <h2 className=\"enter-pollid\">Enter Poll ID</h2>\r\n            <input focus type=\"text\" className=\"poll-inp\" value={pollId} onChange={e => setPollId(e.target.value)}/>\r\n            <div className=\"submit-poll-id\">\r\n                <button onClick={() => onModal(pollId)} disabled={pollId.trim().length === 0}>Submit</button>\r\n                <div  onClick={() => onModal(false)}>Cancel</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default NavBar\r\n\r\n","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.render.jsx",["61"],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.render.jsx",["62","63"],"import React, { useState, useEffect, createRef, useRef } from 'react'\r\nimport { CheckCircleIcon } from '../../utils/material.modules'\r\nimport './create.css'\r\nfunction CreateRender({ submit, loading, resetCreateForm }) {\r\n    const [form, setForm] = useState({ title : '', description : '', options : ['', ''] })\r\n    useEffect(() => {\r\n        setForm({ title : '', description : '', options : ['', ''] })\r\n    },[resetCreateForm])\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        const cForm = {...form}\r\n        cForm.options = form.options.filter(option => option.trim().length > 0) \r\n        submit(cForm)\r\n    }\r\n    const optionChange = (e, i) => {\r\n        let optionsClone = [...form.options]\r\n        optionsClone[i] = e.target.value;\r\n        setForm({ ...form, options : optionsClone })\r\n    }\r\n    const optionClick = i => {\r\n        if(i < form.options.length-1) return\r\n        let optionsClone = [...form.options]\r\n        optionsClone.push('')\r\n        setForm({ ...form, options :optionsClone })\r\n    }\r\n    const removeOption = i => {\r\n        let optionsClone = [...form.options]\r\n        optionsClone.splice(i, 1)\r\n        setForm({ ...form, options :optionsClone })\r\n    }\r\n    return (\r\n        <div className=\"create-render\">\r\n            <h1 className=\"create_header\">\r\n                Create a Poll\r\n            </h1>\r\n            <form onSubmit={submitForm}>\r\n            <div className=\"create_poll-inp\">\r\n                <div className=\"poll-inp--header\">\r\n                    Title\r\n                </div>\r\n                <div className=\"pol-inp--val\">\r\n                    <input required \r\n                        type=\"text\" \r\n                        placeholder=\"Type your question here\" \r\n                        className=\"standard-inp\" \r\n                        value={form.title} \r\n                        onChange={e => setForm({ ...form, title : e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            \r\n                <div className=\"create_poll-inp\">\r\n                    <div className=\"poll-inp--header\">\r\n                        Description (Optional)\r\n                    </div>\r\n                    <div className=\"pol-inp--val\">\r\n                        <textarea \r\n                            placeholder=\"Enter an introduction text...\" \r\n                            className=\"standard-inp\" \r\n                            value={form.description} \r\n                            onChange={e => setForm({ ...form, description : e.target.value })}\r\n                        >\r\n\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"create_poll-inp\">\r\n                    <div className=\"poll-inp--header\">\r\n                        Answer Options\r\n                    </div>\r\n                    \r\n                        {\r\n                            form.options.map((o, i) => {\r\n                                return <div className=\"pol-inp--val option-inp\"> \r\n                                    <input \r\n                                        required ={i <= 1}\r\n                                        type=\"text\" \r\n                                        placeholder={`Enter Option ${i+1}`} \r\n                                        className=\"standard-inp\"\r\n                                        value={o}\r\n                                        key={i}\r\n                                        onClick={() => optionClick(i)}\r\n                                        onChange={e => optionChange(e, i)}\r\n                                    />\r\n                                    {\r\n                                        i > 1 ? <div className=\"remove-option\" onClick={() => removeOption(i)}>x</div> : null\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    \r\n                </div>\r\n\r\n                <div className=\"create-pol-submit\">\r\n                    <button disabled={loading}>{loading ? 'Submitting...' : 'Submit'}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nfunction OnCreate({ id, close }){\r\n    const [copy, setCopy] = useState(true);\r\n    const [select, setSelect] = useState(useRef());\r\n    const closeModal = ()=>{\r\n        select.current.select()\r\n        document.execCommand(\"copy\");\r\n        setCopy(false)\r\n        setTimeout(() => close(), 1000)\r\n    }\r\n    return (\r\n        <div className=\"overlay\">\r\n            <div className=\"overlay-div created-poll\">\r\n                <div className=\"success-icon\">\r\n                    <CheckCircleIcon/>\r\n                </div>\r\n                <input style={{opacity:0, position:'absolute', zIndex : -1}} ref={select} value= {id}/>\r\n                <div className=\"poll-msg\">{`Poll created ID : ${id}`}</div>\r\n                <button \r\n                    disabled={!copy} \r\n                    className=\"poll-copy-btn\"\r\n                    onClick={closeModal}\r\n                >{copy ? 'Copy' : 'copied'}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {OnCreate}\r\nexport default CreateRender\r\n\r\n","D:\\mukul\\live-voter\\live-voter-client\\src\\utils\\material.modules.js",[],{"ruleId":"64","severity":1,"message":"65","line":15,"column":92,"nodeType":"66","messageId":"67","endLine":15,"endColumn":93,"fix":"68"},{"ruleId":"64","severity":1,"message":"65","line":16,"column":28,"nodeType":"66","messageId":"67","endLine":16,"endColumn":29,"fix":"69"},{"ruleId":"70","severity":1,"message":"71","line":19,"column":34,"nodeType":"72","messageId":"73","endLine":19,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":27,"column":8,"nodeType":"76","endLine":27,"endColumn":10,"suggestions":"77"},{"ruleId":"64","severity":1,"message":"65","line":30,"column":118,"nodeType":"66","messageId":"67","endLine":30,"endColumn":119,"fix":"78"},{"ruleId":"64","severity":1,"message":"65","line":31,"column":28,"nodeType":"66","messageId":"67","endLine":31,"endColumn":29,"fix":"79"},{"ruleId":"70","severity":1,"message":"71","line":34,"column":30,"nodeType":"72","messageId":"73","endLine":34,"endColumn":32},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"74","severity":1,"message":"84","line":17,"column":7,"nodeType":"76","endLine":17,"endColumn":9,"suggestions":"85"},{"ruleId":"64","severity":1,"message":"65","line":24,"column":13,"nodeType":"66","messageId":"67","endLine":24,"endColumn":14,"fix":"86"},{"ruleId":"64","severity":1,"message":"65","line":25,"column":28,"nodeType":"66","messageId":"67","endLine":25,"endColumn":29,"fix":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":12},{"ruleId":"70","severity":1,"message":"93","line":37,"column":117,"nodeType":"72","messageId":"73","endLine":37,"endColumn":119},{"ruleId":"88","severity":1,"message":"94","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":47},{"ruleId":"88","severity":1,"message":"95","line":104,"column":20,"nodeType":"90","messageId":"91","endLine":104,"endColumn":29},"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"96","text":"97"},{"range":"98","text":"99"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setContext'. Either include them or remove the dependency array.","ArrayExpression",["100"],{"range":"101","text":"97"},{"range":"102","text":"99"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"React Hook useEffect has a missing dependency: 'createLocation.state.alert'. Either include it or remove the dependency array.",["105"],{"range":"106","text":"97"},{"range":"107","text":"97"},"no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","'Vote' is defined but never used.","Expected '===' and instead saw '=='.","'createRef' is defined but never used.","'setSelect' is assigned a value but never used.",[663,675]," \r\n        .",[694,705],"\r\n        .",{"desc":"108","fix":"109"},[1294,1306],[1325,1336],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},[937,949],[968,980],"Update the dependencies array to be: [history, setContext]",{"range":"112","text":"113"},"Update the dependencies array to be: [createLocation.state.alert]",{"range":"114","text":"115"},[1096,1098],"[history, setContext]",[650,652],"[createLocation.state.alert]"]