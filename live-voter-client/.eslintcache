[{"D:\\mukul\\live-voter\\live-voter-client\\src\\index.js":"1","D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\reducers.js":"2","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\App.js":"3","D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\actions.js":"4","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.jsx":"5","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.jsx":"6","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\navbar\\navbar.jsx":"7","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.render.jsx":"8","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.render.jsx":"9","D:\\mukul\\live-voter\\live-voter-client\\src\\utils\\material.modules.js":"10","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\index.js":"11","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\App.js":"12","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\redux\\reducers.js":"13","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\redux\\actions.js":"14","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\create\\create.jsx":"15","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\navbar\\navbar.jsx":"16","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\vote\\vote.jsx":"17","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\utils\\material.modules.js":"18","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\create\\create.render.jsx":"19","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\vote\\vote.render.jsx":"20"},{"size":377,"mtime":1611670468000,"results":"21","hashOfConfig":"22"},{"size":292,"mtime":1611567018000,"results":"23","hashOfConfig":"22"},{"size":679,"mtime":1611685208000,"results":"24","hashOfConfig":"22"},{"size":64,"mtime":1611566134000,"results":"25","hashOfConfig":"22"},{"size":2350,"mtime":1611734194000,"results":"26","hashOfConfig":"22"},{"size":1848,"mtime":1611729706000,"results":"27","hashOfConfig":"22"},{"size":1858,"mtime":1611725228000,"results":"28","hashOfConfig":"22"},{"size":3567,"mtime":1611734930000,"results":"29","hashOfConfig":"22"},{"size":5217,"mtime":1611725220000,"results":"30","hashOfConfig":"22"},{"size":1424,"mtime":1611730352000,"results":"31","hashOfConfig":"22"},{"size":377,"mtime":1611670468000,"results":"32","hashOfConfig":"33"},{"size":679,"mtime":1611685208000,"results":"34","hashOfConfig":"33"},{"size":292,"mtime":1611567018000,"results":"35","hashOfConfig":"33"},{"size":64,"mtime":1611566134000,"results":"36","hashOfConfig":"33"},{"size":1848,"mtime":1611729706000,"results":"37","hashOfConfig":"33"},{"size":1858,"mtime":1611725228000,"results":"38","hashOfConfig":"33"},{"size":2457,"mtime":1611740118000,"results":"39","hashOfConfig":"33"},{"size":1424,"mtime":1611730352000,"results":"40","hashOfConfig":"33"},{"size":5217,"mtime":1611725220000,"results":"41","hashOfConfig":"33"},{"size":4339,"mtime":1611740120000,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yph74w",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1bu9hu0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":4,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},"D:\\mukul\\live-voter\\live-voter-client\\src\\index.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\reducers.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\App.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\redux\\actions.js",[],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.jsx",["93","94","95","96","97","98","99"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultHeaders, LoopIcon } from '../../utils/material.modules'\r\nimport {VotePoll, VoteStats} from './vote.render'\r\nfunction Vote(props) {\r\n    const [voteContext, setVoteContext] = useState({ \r\n        voteStat : 1, \r\n        pollData : null, \r\n        id : window.location.pathname.split('/')[2],\r\n        voteStatus : 'Vote'\r\n    })\r\n    const history = useHistory();\r\n    const setContext = obj => setVoteContext({ ...voteContext,  ...obj})\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080'+window.location.pathname, { headers: defaultHeaders}). \r\n        then(r => r.json()).\r\n        then(response => {\r\n            if(response['message']){\r\n                if(response.code != 200){\r\n                    history.push('/create', { alert : response.message || 'Unknown error occured' })\r\n                    return \r\n                }\r\n                console.log(response.message)\r\n                setContext({pollData : response.message})\r\n            }\r\n        })\r\n    }, [])\r\n    const vote = index => {\r\n        setContext({ voteStatus : 'Voting' })\r\n        fetch(`http://localhost:8080/vote/${voteContext.id}/${index}`, { headers : defaultHeaders, method : 'POST' }). \r\n        then(r => r.json()).\r\n        then(response => {\r\n            setContext({ voteStatus : 'Vote' })\r\n            if(response.code != 201){\r\n                alert(response.message || 'Unknown error occured')\r\n                return \r\n            }\r\n            alert('Voted successfully!')\r\n            // history.push('/create', { alert : 'Voted successfully!' })\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                voteContext.pollData ?\r\n                voteContext.voteStat ?\r\n                <VotePoll \r\n                    showVote={() => setContext({voteStat : 0})} \r\n                    vote={vote}\r\n                    pollData={voteContext.pollData}\r\n                    voteStatus={voteContext.voteStatus}\r\n                /> :\r\n                <VoteStats \r\n                    goBack={() => setContext({voteStat : 1})}\r\n                />\r\n                :<LoopIcon className='vote-loading'/>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Vote\r\n\r\n",["100","101"],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.jsx",["102","103","104"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport CreateRender, { OnCreate } from './create.render'\r\nfunction Create(props) {\r\n    const createLocation = useLocation()\r\n    const [createContext, setCreateContext] = useState(\r\n        {   loading : false, \r\n            created : false, \r\n            resetCreateForm : true,\r\n            id : null\r\n        });\r\n    const setContext = keyValue => setCreateContext({...createContext, ...keyValue})\r\n    useEffect(()=>{\r\n        if(createLocation.state.alert){\r\n            setTimeout(() => alert(createLocation.state.alert), 500)\r\n        }\r\n    },[])\r\n    const submit = form => {\r\n        setContext({ loading : true })\r\n        fetch('http://localhost:8080/poll', { method : \"GSA\", body : JSON.stringify(form), \r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        } }). \r\n        then(r => r.json()). \r\n        then(response => {\r\n            setContext({ loading : false, created : true, resetCreateForm : Math.random(), id : response['message'] })\r\n        }).catch(e => {\r\n            setContext({ loading : false })\r\n            alert(`ERROR : ${JSON.stringify(e)}`)\r\n        })\r\n    }\r\n    const closeCreated = () => {\r\n        setContext({ created : false });\r\n    }\r\n    return (\r\n        <>\r\n            <CreateRender \r\n                submit={submit} \r\n                loading={createContext.loading} \r\n                resetCreateForm={createContext.resetCreateForm}\r\n            />\r\n            {\r\n                createContext.created ? \r\n                <OnCreate \r\n                    id={createContext.id} \r\n                    close={closeCreated}\r\n                /> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Create\r\n\r\n","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\navbar\\navbar.jsx",["105","106"],"\r\nimport React, { useState } from 'react'\r\nimport Create from '../create/create';\r\nimport Vote from '../vote/vote'\r\nimport './navbar.css'\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\nfunction NavBar(props) {\r\n    const history = useHistory();\r\n    const [votePoll, setVotePoll] = useState(false)\r\n    const toCreate = () => {\r\n        history.push('/create')\r\n    }\r\n    const onModal = type => {\r\n        if(!type || type.trim().length === 0){\r\n            setVotePoll(false)\r\n            return;\r\n        }\r\n        setVotePoll(false)\r\n        history.push('/vote/'+type)\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-items\">\r\n                    <div className=\"nav-item\" onClick={toCreate}>Create Poll</div>\r\n                    <div className=\"nav-item\" onClick={() => setVotePoll(true)}>Vote Poll</div>\r\n                </div>\r\n                <h1 className=\"header\">\r\n                    Live Voter\r\n                </h1>\r\n            </div>\r\n            {\r\n                votePoll ? <EnterPollIdTemplate onModal = {onModal}/> : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nfunction EnterPollIdTemplate({ onModal }){\r\n    const [pollId, setPollId] = useState('')\r\n    return <div className=\"overlay\">\r\n        <div className=\"overlay-div poll-template\">\r\n            <h2 className=\"enter-pollid\">Enter Poll ID</h2>\r\n            <input focus type=\"text\" className=\"poll-inp\" value={pollId} onChange={e => setPollId(e.target.value)}/>\r\n            <div className=\"submit-poll-id\">\r\n                <button onClick={() => onModal(pollId)} disabled={pollId.trim().length === 0}>Submit</button>\r\n                <div  onClick={() => onModal(false)}>Cancel</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default NavBar\r\n\r\n","D:\\mukul\\live-voter\\live-voter-client\\src\\components\\vote\\vote.render.jsx",["107"],"D:\\mukul\\live-voter\\live-voter-client\\src\\components\\create\\create.render.jsx",["108","109"],"import React, { useState, useEffect, createRef, useRef } from 'react'\r\nimport { CheckCircleIcon } from '../../utils/material.modules'\r\nimport './create.css'\r\nfunction CreateRender({ submit, loading, resetCreateForm }) {\r\n    const [form, setForm] = useState({ title : '', description : '', options : ['', ''] })\r\n    useEffect(() => {\r\n        setForm({ title : '', description : '', options : ['', ''] })\r\n    },[resetCreateForm])\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        const cForm = {...form}\r\n        cForm.options = form.options.filter(option => option.trim().length > 0) \r\n        submit(cForm)\r\n    }\r\n    const optionChange = (e, i) => {\r\n        let optionsClone = [...form.options]\r\n        optionsClone[i] = e.target.value;\r\n        setForm({ ...form, options : optionsClone })\r\n    }\r\n    const optionClick = i => {\r\n        if(i < form.options.length-1) return\r\n        let optionsClone = [...form.options]\r\n        optionsClone.push('')\r\n        setForm({ ...form, options :optionsClone })\r\n    }\r\n    const removeOption = i => {\r\n        let optionsClone = [...form.options]\r\n        optionsClone.splice(i, 1)\r\n        setForm({ ...form, options :optionsClone })\r\n    }\r\n    return (\r\n        <div className=\"create-render\">\r\n            <h1 className=\"create_header\">\r\n                Create a Poll\r\n            </h1>\r\n            <form onSubmit={submitForm}>\r\n            <div className=\"create_poll-inp\">\r\n                <div className=\"poll-inp--header\">\r\n                    Title\r\n                </div>\r\n                <div className=\"pol-inp--val\">\r\n                    <input required \r\n                        type=\"text\" \r\n                        placeholder=\"Type your question here\" \r\n                        className=\"standard-inp\" \r\n                        value={form.title} \r\n                        onChange={e => setForm({ ...form, title : e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            \r\n                <div className=\"create_poll-inp\">\r\n                    <div className=\"poll-inp--header\">\r\n                        Description (Optional)\r\n                    </div>\r\n                    <div className=\"pol-inp--val\">\r\n                        <textarea \r\n                            placeholder=\"Enter an introduction text...\" \r\n                            className=\"standard-inp\" \r\n                            value={form.description} \r\n                            onChange={e => setForm({ ...form, description : e.target.value })}\r\n                        >\r\n\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"create_poll-inp\">\r\n                    <div className=\"poll-inp--header\">\r\n                        Answer Options\r\n                    </div>\r\n                    \r\n                        {\r\n                            form.options.map((o, i) => {\r\n                                return <div className=\"pol-inp--val option-inp\"> \r\n                                    <input \r\n                                        required ={i <= 1}\r\n                                        type=\"text\" \r\n                                        placeholder={`Enter Option ${i+1}`} \r\n                                        className=\"standard-inp\"\r\n                                        value={o}\r\n                                        key={i}\r\n                                        onClick={() => optionClick(i)}\r\n                                        onChange={e => optionChange(e, i)}\r\n                                    />\r\n                                    {\r\n                                        i > 1 ? <div className=\"remove-option\" onClick={() => removeOption(i)}>x</div> : null\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    \r\n                </div>\r\n\r\n                <div className=\"create-pol-submit\">\r\n                    <button disabled={loading}>{loading ? 'Submitting...' : 'Submit'}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nfunction OnCreate({ id, close }){\r\n    const [copy, setCopy] = useState(true);\r\n    const [select, setSelect] = useState(useRef());\r\n    const closeModal = ()=>{\r\n        select.current.select()\r\n        document.execCommand(\"copy\");\r\n        setCopy(false)\r\n        setTimeout(() => close(), 1000)\r\n    }\r\n    return (\r\n        <div className=\"overlay\">\r\n            <div className=\"overlay-div created-poll\">\r\n                <div className=\"success-icon\">\r\n                    <CheckCircleIcon/>\r\n                </div>\r\n                <input style={{opacity:0, position:'absolute', zIndex : -1}} ref={select} value= {id}/>\r\n                <div className=\"poll-msg\">{`Poll created ID : ${id}`}</div>\r\n                <button \r\n                    disabled={!copy} \r\n                    className=\"poll-copy-btn\"\r\n                    onClick={closeModal}\r\n                >{copy ? 'Copy' : 'copied'}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {OnCreate}\r\nexport default CreateRender\r\n\r\n","D:\\mukul\\live-voter\\live-voter-client\\src\\utils\\material.modules.js",[],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\index.js",[],["110","111"],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\App.js",[],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\redux\\reducers.js",[],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\redux\\actions.js",[],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\create\\create.jsx",["112","113","114"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport CreateRender, { OnCreate } from './create.render'\r\nfunction Create(props) {\r\n    const createLocation = useLocation()\r\n    const [createContext, setCreateContext] = useState(\r\n        {   loading : false, \r\n            created : false, \r\n            resetCreateForm : true,\r\n            id : null\r\n        });\r\n    const setContext = keyValue => setCreateContext({...createContext, ...keyValue})\r\n    useEffect(()=>{\r\n        if(createLocation.state && createLocation.state.alert){\r\n            setTimeout(() => alert(createLocation.state.alert), 500)\r\n        }\r\n    },[])\r\n    const submit = form => {\r\n        setContext({ loading : true })\r\n        fetch('http://localhost:8080/poll', { method : \"POST\", body : JSON.stringify(form), \r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        } }). \r\n        then(r => r.json()). \r\n        then(response => {\r\n            setContext({ loading : false, created : true, resetCreateForm : Math.random(), id : response['message'] })\r\n        }).catch(e => {\r\n            setContext({ loading : false })\r\n            alert(`ERROR : ${JSON.stringify(e)}`)\r\n        })\r\n    }\r\n    const closeCreated = () => {\r\n        setContext({ created : false });\r\n    }\r\n    return (\r\n        <>\r\n            <CreateRender \r\n                submit={submit} \r\n                loading={createContext.loading} \r\n                resetCreateForm={createContext.resetCreateForm}\r\n            />\r\n            {\r\n                createContext.created ? \r\n                <OnCreate \r\n                    id={createContext.id} \r\n                    close={closeCreated}\r\n                /> : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Create\r\n\r\n","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\navbar\\navbar.jsx",["115","116"],"\r\nimport React, { useState } from 'react'\r\nimport Create from '../create/create';\r\nimport Vote from '../vote/vote'\r\nimport './navbar.css'\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\nfunction NavBar(props) {\r\n    const history = useHistory();\r\n    const [votePoll, setVotePoll] = useState(false)\r\n    const toCreate = () => {\r\n        history.push('/create')\r\n    }\r\n    const onModal = type => {\r\n        if(!type || type.trim().length === 0){\r\n            setVotePoll(false)\r\n            return;\r\n        }\r\n        setVotePoll(false)\r\n        history.push('/vote/'+type)\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-items\">\r\n                    <div className=\"nav-item\" onClick={toCreate}>Create Poll</div>\r\n                    <div className=\"nav-item\" onClick={() => setVotePoll(true)}>Vote Poll</div>\r\n                </div>\r\n                <h1 className=\"header\">\r\n                    Live Voter\r\n                </h1>\r\n            </div>\r\n            {\r\n                votePoll ? <EnterPollIdTemplate onModal = {onModal}/> : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nfunction EnterPollIdTemplate({ onModal }){\r\n    const [pollId, setPollId] = useState('')\r\n    return <div className=\"overlay\">\r\n        <div className=\"overlay-div poll-template\">\r\n            <h2 className=\"enter-pollid\">Enter Poll ID</h2>\r\n            <input focus={true}  type=\"text\" className=\"poll-inp\" value={pollId} onChange={e => setPollId(e.target.value)}/>\r\n            <div className=\"submit-poll-id\">\r\n                <button onClick={() => onModal(pollId)} disabled={pollId.trim().length === 0}>Submit</button>\r\n                <div  onClick={() => onModal(false)}>Cancel</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default NavBar\r\n\r\n","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\vote\\vote.jsx",["117","118","119","120","121","122","123","124"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultHeaders, LoopIcon } from '../../utils/material.modules'\r\nimport {VotePoll, VoteStats} from './vote.render'\r\nimport io from \"socket.io-client\";\r\nfunction Vote(props) {\r\n    const [voteContext, setVoteContext] = useState({ \r\n        voteStat : 1, \r\n        pollData : null, \r\n        id : window.location.pathname.split('/')[2],\r\n        voteStatus : 'Vote',\r\n        newPollVotes : null\r\n    })\r\n    const history = useHistory();\r\n    const setContext = obj => setVoteContext({ ...voteContext,  ...obj})\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080'+window.location.pathname, { headers: defaultHeaders}). \r\n        then(r => r.json()).\r\n        then(response => {\r\n            if(response['message']){\r\n                if(response.code != 200){\r\n                    history.push('/create', { alert : response.message || 'Unknown error occured' })\r\n                    return \r\n                }\r\n                console.log(response.message)\r\n                setContext({pollData : response.message})\r\n            }\r\n        })\r\n    }, [])\r\n    const vote = index => {\r\n        setContext({ voteStatus : 'Voting' })\r\n        fetch(`http://localhost:8080/vote/${voteContext.id}/${index}`, { headers : defaultHeaders, method : 'POST' }). \r\n        then(r => r.json()).\r\n        then(response => {\r\n            setContext({ voteStatus : 'Vote' })\r\n            if(response.code != 201){\r\n                alert(response.message || 'Unknown error occured')\r\n                return \r\n            }\r\n            alert('Voted successfully!')\r\n            // history.push('/create', { alert : 'Voted successfully!' })\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                voteContext.pollData ?\r\n                voteContext.voteStat ?\r\n                <VotePoll \r\n                    showVote={() => setContext({voteStat : 0})} \r\n                    vote={vote}\r\n                    pollData={voteContext.pollData}\r\n                    voteStatus={voteContext.voteStatus}\r\n                /> :\r\n                <VoteStats\r\n                    pollData={voteContext.pollData}\r\n                    goBack={() => setContext({voteStat : 1})}\r\n                    id={voteContext.id}\r\n                />\r\n                :<LoopIcon className='vote-loading'/>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Vote\r\n\r\n","D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\utils\\material.modules.js",[],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\create\\create.render.jsx",["125","126"],"D:\\mukul\\live-poll-voter\\live-poll\\live-voter-client\\src\\components\\vote\\vote.render.jsx",["127"],"import React, { useState } from 'react'\r\nimport { formatSeconds } from '../../utils/material.modules'\r\nimport './vote.css'\r\nexport function VotePoll({vote, showVote, pollData, voteStatus}) {\r\n    const [myOption, setMyOption] = useState(-1)\r\n    return (\r\n        <div className=\"vote-poll\">\r\n            <h1 className=\"poll-title\">\r\n                {pollData.title}\r\n            </h1>\r\n            <p className=\"poll-time\">\r\n                Created {formatSeconds(Number(((new Date().valueOf() - pollData.createdAt)/1000).toFixed()))} ago\r\n            </p>\r\n            <div className=\"poll-star\">\r\n                <p className=\"poll__description\">\r\n                    {pollData.description || ''}\r\n                </p>\r\n                <p className=\"choose-answer\">\r\n                    Choose an answer\r\n                </p>\r\n                <div className=\"poll-votes\">\r\n                    {\r\n                        (pollData.options || []).map((option, i) => \r\n                        {\r\n                            return <div className=\"poll-option\">\r\n                            <input key={i} type=\"radio\" name=\"option\" value=\"false\" className=\"poll-check\" onClick={() => setMyOption(i)}/>\r\n                            <div className=\"poll-option-ans\">\r\n                                {option}\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                    )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"poll-actions\">\r\n                    <button className=\"vote-btn\" onClick={() => vote(myOption)} disabled={myOption < 0 || voteStatus=='Voting'}>{voteStatus}</button>\r\n                    <button className=\"show-vote-btn\" onClick={showVote}>Show Votes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function VoteStats({pollData, updatedPollData, goBack}){\r\n    return (\r\n        <div className=\"vote-poll\">\r\n        <h1 className=\"poll-title\">\r\n                {pollData.title}\r\n        </h1>\r\n        <p className=\"poll-time\">\r\n            Created {formatSeconds(Number(((new Date().valueOf() - pollData.createdAt)/1000).toFixed()))} ago\r\n        </p>\r\n        <div className=\"poll-star\">\r\n            <p className=\"poll__description\">\r\n                {pollData.description || ''}\r\n            </p>\r\n            <div className=\"poll-votes\">\r\n                {\r\n                    (Object.keys(pollData.votes) || []).map(option => {\r\n                        return <div className=\"poll-option-block\">\r\n                        <div className=\"poll-option--progress\">\r\n                            <p>{option} ({pollData.votes[option]} votes)</p>\r\n                            {`${((pollData.votes[option]/pollData.totalVotes) * 100).toFixed(1)}%`}\r\n                        </div>\r\n                        <div className=\"option-progress\">\r\n                            <div id=\"option-progress\" style={{width : `${((pollData.votes[option]/pollData.totalVotes) * 100).toFixed(1)}%` }}></div>\r\n                        </div>\r\n                    </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className=\"divider\"></div>\r\n            <div className=\"total-votes\">Total Votes : {pollData.totalVotes}</div>\r\n\r\n            <div className=\"poll-actions\">\r\n                <button className=\"vote-btn back-btn\" onClick={goBack}>Back to Vote</button>\r\n                {/* <button className=\"show-vote-btn\">Show Votes</button> */}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}",{"ruleId":"128","severity":1,"message":"129","line":15,"column":92,"nodeType":"130","messageId":"131","endLine":15,"endColumn":93,"fix":"132"},{"ruleId":"128","severity":1,"message":"129","line":16,"column":28,"nodeType":"130","messageId":"131","endLine":16,"endColumn":29,"fix":"133"},{"ruleId":"134","severity":1,"message":"135","line":19,"column":34,"nodeType":"136","messageId":"137","endLine":19,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":27,"column":8,"nodeType":"140","endLine":27,"endColumn":10,"suggestions":"141"},{"ruleId":"128","severity":1,"message":"129","line":30,"column":118,"nodeType":"130","messageId":"131","endLine":30,"endColumn":119,"fix":"142"},{"ruleId":"128","severity":1,"message":"129","line":31,"column":28,"nodeType":"130","messageId":"131","endLine":31,"endColumn":29,"fix":"143"},{"ruleId":"134","severity":1,"message":"135","line":34,"column":30,"nodeType":"136","messageId":"137","endLine":34,"endColumn":32},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"138","severity":1,"message":"148","line":17,"column":7,"nodeType":"140","endLine":17,"endColumn":9,"suggestions":"149"},{"ruleId":"128","severity":1,"message":"129","line":24,"column":13,"nodeType":"130","messageId":"131","endLine":24,"endColumn":14,"fix":"150"},{"ruleId":"128","severity":1,"message":"129","line":25,"column":28,"nodeType":"130","messageId":"131","endLine":25,"endColumn":29,"fix":"151"},{"ruleId":"152","severity":1,"message":"153","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"156","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":12},{"ruleId":"134","severity":1,"message":"157","line":37,"column":117,"nodeType":"136","messageId":"137","endLine":37,"endColumn":119},{"ruleId":"152","severity":1,"message":"158","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"159","line":104,"column":20,"nodeType":"154","messageId":"155","endLine":104,"endColumn":29},{"ruleId":"144","replacedBy":"160"},{"ruleId":"146","replacedBy":"161"},{"ruleId":"138","severity":1,"message":"162","line":17,"column":7,"nodeType":"140","endLine":17,"endColumn":9,"suggestions":"163"},{"ruleId":"128","severity":1,"message":"129","line":24,"column":13,"nodeType":"130","messageId":"131","endLine":24,"endColumn":14,"fix":"164"},{"ruleId":"128","severity":1,"message":"129","line":25,"column":28,"nodeType":"130","messageId":"131","endLine":25,"endColumn":29,"fix":"165"},{"ruleId":"152","severity":1,"message":"153","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"156","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":12},{"ruleId":"152","severity":1,"message":"166","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":17,"column":92,"nodeType":"130","messageId":"131","endLine":17,"endColumn":93,"fix":"167"},{"ruleId":"128","severity":1,"message":"129","line":18,"column":28,"nodeType":"130","messageId":"131","endLine":18,"endColumn":29,"fix":"168"},{"ruleId":"134","severity":1,"message":"135","line":21,"column":34,"nodeType":"136","messageId":"137","endLine":21,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":29,"column":8,"nodeType":"140","endLine":29,"endColumn":10,"suggestions":"169"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":118,"nodeType":"130","messageId":"131","endLine":32,"endColumn":119,"fix":"170"},{"ruleId":"128","severity":1,"message":"129","line":33,"column":28,"nodeType":"130","messageId":"131","endLine":33,"endColumn":29,"fix":"171"},{"ruleId":"134","severity":1,"message":"135","line":36,"column":30,"nodeType":"136","messageId":"137","endLine":36,"endColumn":32},{"ruleId":"152","severity":1,"message":"158","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":47},{"ruleId":"152","severity":1,"message":"159","line":104,"column":20,"nodeType":"154","messageId":"155","endLine":104,"endColumn":29},{"ruleId":"134","severity":1,"message":"157","line":37,"column":117,"nodeType":"136","messageId":"137","endLine":37,"endColumn":119},"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"172","text":"173"},{"range":"174","text":"175"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setContext'. Either include them or remove the dependency array.","ArrayExpression",["176"],{"range":"177","text":"173"},{"range":"178","text":"175"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"React Hook useEffect has a missing dependency: 'createLocation.state.alert'. Either include it or remove the dependency array.",["181"],{"range":"182","text":"173"},{"range":"183","text":"173"},"no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","'Vote' is defined but never used.","Expected '===' and instead saw '=='.","'createRef' is defined but never used.","'setSelect' is assigned a value but never used.",["179"],["180"],"React Hook useEffect has a missing dependency: 'createLocation.state'. Either include it or remove the dependency array.",["184"],{"range":"185","text":"173"},{"range":"186","text":"173"},"'io' is defined but never used.",{"range":"187","text":"173"},{"range":"188","text":"175"},["189"],{"range":"190","text":"173"},{"range":"191","text":"175"},[663,675]," \r\n        .",[694,705],"\r\n        .",{"desc":"192","fix":"193"},[1294,1306],[1325,1336],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},[937,949],[968,980],{"desc":"196","fix":"197"},[962,974],[993,1005],[729,741],[760,771],{"desc":"192","fix":"198"},[1360,1372],[1391,1402],"Update the dependencies array to be: [history, setContext]",{"range":"199","text":"200"},"Update the dependencies array to be: [createLocation.state.alert]",{"range":"201","text":"202"},"Update the dependencies array to be: [createLocation.state]",{"range":"203","text":"204"},{"range":"205","text":"200"},[1096,1098],"[history, setContext]",[650,652],"[createLocation.state.alert]",[674,676],"[createLocation.state]",[1162,1164]]